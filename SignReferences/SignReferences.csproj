<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{751F8EE9-7F79-49C1-BA66-C3FA1E008EE1}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SignReferences</RootNamespace>
    <AssemblyName>SignReferences</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommandLine, Version=2.0.0.0, Culture=neutral, PublicKeyToken=de6f01bd326f8c32, processorArchitecture=MSIL">
      <HintPath>..\packages\CommandLineParser20.2.0.0.0\lib\net40\CommandLine.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.Build" />
    <Reference Include="Microsoft.Build.Framework" />
    <Reference Include="Microsoft.Build.Utilities.v4.0" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Xml" />
    <Reference Include="WildcardMatch, Version=1.0.4.0, Culture=neutral, PublicKeyToken=9e63cdfa062b7634, processorArchitecture=MSIL">
      <HintPath>..\packages\WildcardMatch.1.0.4\lib\portable-net40+sl40+win+wp\WildcardMatch.dll</HintPath>
      <SpecificVersion>False</SpecificVersion>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Logging\ConsoleLogging.cs" />
    <Compile Include="Logging\ILogging.cs" />
    <Compile Include="Properties\ProductInfo.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ProductInfo.tt</DependentUpon>
    </Compile>
    <Compile Include="Signing\AssemblyKey.cs" />
    <Compile Include="Signing\AssemblyKeyProvider.cs" />
    <Compile Include="SignUnsignedReferences.cs" />
    <Compile Include="Project\AssemblyReference.cs" />
    <Compile Include="Signing\AssemblySigner.cs" />
    <Compile Include="Project\IReferences.cs" />
    <Compile Include="Project\ProjectDefinitionExtensions.cs" />
    <Compile Include="Parameters.cs" />
    <Compile Include="Project\ProjectDefinition.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Signing\ProjectSigner.cs" />
    <Compile Include="Utility\EnumerableExtensions.cs" />
    <Compile Include="Logging\TaskLogging.cs" />
    <Compile Include="Utility\PathUtility.cs" />
    <Compile Include="Utility\ProcessUtility.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="SignReferences.nuspec">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>SignReferences.tt</DependentUpon>
    </None>
    <None Include="NuGet\build\SignReferences.targets">
      <SubType>Designer</SubType>
    </None>
    <None Include="packages.config" />
    <None Include="Properties\ProductInfo.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ProductInfo.cs</LastGenOutput>
    </None>
    <None Include="Properties\ProductInfoValues.tt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="FodyWeavers.xml" />
    <None Include="SignReferences.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SignReferences.nuspec</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\packages\Clarius.TransformOnBuild.1.1.12\build\Clarius.TransformOnBuild.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Clarius.TransformOnBuild.1.1.12\build\Clarius.TransformOnBuild.targets'))" />
    <Error Condition="!Exists('..\packages\Fody.1.29.0\build\Fody.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Fody.1.29.0\build\Fody.targets'))" />
  </Target>
  <PropertyGroup>
    <PostBuildEvent>rem --- NuGet pack ------------------------------------------------------------------------------

rem if not "$(ConfigurationName)"=="Release" goto :noRelease

echo Packaging for NuGet...

copy "$(TargetPath)" "$(TargetDir)SignReferences.dll"
"$(SolutionDir)\.nuget\NuGet.exe" pack "$(ProjectDir)\SignReferences.nuspec" -Verbosity detailed -NonInteractive -IncludeReferencedProjects -NonInteractive -Tool -Properties ConfigurationName=$(ConfigurationName) 

:noRelease
</PostBuildEvent>
  </PropertyGroup>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Import Project="..\packages\Clarius.TransformOnBuild.1.1.12\build\Clarius.TransformOnBuild.targets" Condition="Exists('..\packages\Clarius.TransformOnBuild.1.1.12\build\Clarius.TransformOnBuild.targets')" />
  <Import Project="..\packages\Fody.1.29.0\build\Fody.targets" Condition="Exists('..\packages\Fody.1.29.0\build\Fody.targets')" />
</Project>